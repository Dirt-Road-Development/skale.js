name: Prerelease Packages
on: 
  pull_request:
    types: [closed]
    branches:
      - development
jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        fetch-depth: "0"
        token: ${{ secrets.GITHUB_TOKEN }} # this token is available by default
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Conifrm NPM Publishability
      run: npm whoami # will throw and exit if npm is not ready to publish

    - name: Install dependencies
      run: npm ci

    - name: Link Dependencies
      run: npx lerna link 

    - name: Build Packages 
      run: |
        npm nx affected:build --prod --with-deps --base=main

    - name: Configure Git User
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        

    - name: Raise version of affected libraries
      run: |
        LATEST_TAG=$(git tag -l "v*" --sort=-version:refname | head -n 1)
        LIBS=$(npm nx affected:libs --base=$LATEST_TAG --head=HEAD --plain | awk 'NR > 2 && $1 != "Done" { print $1 }')
        for LIBRARY in $LIBS
        do
          cd ./packages/$LIBRARY
          npm version minor --no-git-tag-version --no-push
          echo "Bumping $LIBRARY"
          cd ..
          cd ..
        done
        npm version prerelease --no-git-tag-version --no-push

    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master

    - name: Push changes
      run: |
        git fetch
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor}}@users.noreply.github.com"
        git add --all
        git commit -m "update versions to ${{ steps.package-version.outputs.current-version }}"
        git push

    - name: Tag release
      run: |
        git tag -a v${{ steps.package-version.outputs.current-version }} -m "tag release v${{ steps.package-version.outputs.current-version }}"
        git push --follow-tags

    - name: Publish
      run: |
        npm publish --workspaces --access public --tag alpha --allow-same-version
        git add docs
        git push origin HEAD:"${{ github.event.pull_request.head.ref }}"